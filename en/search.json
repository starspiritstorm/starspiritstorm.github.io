[{"categories":["MSSQL"],"content":"Split comma-separated string into rows.\nI used these key words searching it from google.\nsql separate string by comma into rows  Find first stackoverflow\nThere are two ways to accomplish the job.\nOne method is MSSQL 2016 before, CTE recursion method\nOne method is MSSQL 2016 after, there’s a build-in function, STRING_SPLIT\nAnd performance comparison.\nConclusion, if you are using MSSQL 2016 later version, just use the STRING_SPLIT.\nCTE recursion method to split strings -- a sample temp table DECLARE @temp_origin TABLE ( ID INT , input_date DATETIME , name VARCHAR(50) ) INSERT INTO @temp_origin SELECT 1, '2021-05-05', 'Adam,Gray,Jacy' UNION SELECT 2, '2021-05-08', 'Henry,Alice' UNION SELECT 3, '2021-05-15', 'Ben' DECLARE @split_character VARCHAR(10) SET @split_character = ',' ;WITH split_temp(ID, input_date, splitted_name, step_by_step_to_split, origin_concatenated_name) AS ( SELECT ID , input_date , CAST ( LEFT(name, CHARINDEX(@split_character, name + @split_character) - 1) AS VARCHAR(200)) , STUFF(name, 1, CHARINDEX(@split_character, name + @split_character), '') , name FROM @temp_origin -- CTE recursion to split name column UNION all SELECT ID , input_date , CAST ( LEFT(step_by_step_to_split, CHARINDEX(@split_character, step_by_step_to_split + @split_character) - 1) AS VARCHAR(200)) , STUFF(step_by_step_to_split, 1, CHARINDEX(@split_character, step_by_step_to_split + @split_character), '') , origin_concatenated_name FROM split_temp WHERE step_by_step_to_split \u003e '' ) SELECT ID , input_date , splitted_name , step_by_step_to_split , origin_concatenated_name FROM split_temp ORDER BY ID -- OPTION (maxrecursion 0) -- normally CTE recursion is limited to 100. If you know you have very long strings, uncomment the option /* -- for someone who don't understand the CHARINDEX, LEFT, STUFF function work, you can uncomment this block SELECT ID , input_date , CHARINDEX(@split_character, name + @split_character) - 1 , CAST ( LEFT(name, CHARINDEX(@split_character, name + @split_character) - 1) AS VARCHAR(200))\t-- finding the first @split_character and using LEFT to take out the \"first string\" , CHARINDEX(@split_character, name + @split_character)\t, STUFF(name, 1, CHARINDEX(@split_character, name + @split_character), '')\t-- using STUFF to remove the \"first string\" with @split_character , name FROM @temp_origin */  STRING_SPLIT method to split strings If you are using the version after MSSQL 2016, you can just using the STRING_SPLIT function\nSELECT ID , input_date , cs.Value --SplitData FROM @temp_origin CROSS APPLY STRING_SPLIT (name, @split_character) cs  Here’s the testing result\n","description":"","tags":["MSSQL","Function","MSSQL 2008","MSSQL 2017","Split string"],"title":"MSSQL - Split comma-separated string into rows","uri":"/en/posts/mssql-split-comma-separated-string-into-rows/"},{"categories":["MSSQL"],"content":"A Function of generating continuous sequenced start of month and end of month from a date range.\nCode below here.\n/* ============================================= Author:\tstarspiritstorm Create date: 2021-08-17 Description: A Function of generating continuous sequenced start of month and end of month from a date range Reference: https://stackoverflow.com/questions/21189369/better-way-to-generate-months-year-table https://stackoverflow.com/questions/1520789/how-can-i-select-the-first-day-of-a-month-in-sql?page=1\u0026tab=votes#tab-top https://stackoverflow.com/questions/1051488/get-the-last-day-of-the-month-in-sql CTE version https://stackoverflow.com/questions/33510077/sql-split-period-by-months ============================================= */ CREATE FUNCTION [dbo].[F_Get_Sequenced_MonthStart_And_MonthEnd] ( @FromDate DATETIME , @ToDate DATETIME , @UpdateBeginDate BIT , @UpdateEndDate BIT ) RETURNS @Results TABLE ( MonthStart DATETIME , MonthEnd DATETIME , TheMonth VARCHAR(2) , TheYear VARCHAR(4) ) AS BEGIN -- Months in that period INSERT INTO @Results SELECT TOP (DATEDIFF(MONTH, @FromDate, @ToDate)+1) -- calculate how many rows needed DATEADD(MONTH, number, @FromDate) , DATEADD(MONTH, number, @FromDate) , MONTH(DATEADD(MONTH, number, @FromDate)) , YEAR(DATEADD(MONTH, number, @FromDate)) FROM [master].dbo.spt_values WHERE [type] = N'P' ORDER BY number /* by using [master].dbo.spt_values, the total series number are 2048 (0~2047), for month cases, there will be 2048/12 ≈ 170 year range */ -- Update first date of month and last date of month for each row UPDATE @Results SET MonthStart = DATEADD(MONTH, DATEDIFF(MONTH, 0, MonthStart), 0) , MonthEnd = DATEADD(MONTH, ((YEAR(MonthEnd) - 1900) * 12) + MONTH(MonthEnd), -1) /* MonthStart Caculate the month difference from 1900-01-01 (0 represent 1900-01-01) to the current row's MonthStart record (DATEDIFF part) Then add the month difference from 1900-01-01 (DATEADD part) MonthEnd Caculate the year difference from 1900 to the current row's MonthEnd record then multiply 12 and plus the months of the record (The middle part) Then add the month difference from 1899-12-31 (DATEADD part) NOTE: -1 means 1899-12-31 The MonthEnd sentence is equivalent to this, if you keeped the record of TheYear and TheMonth MonthEnd = DATEADD(MONTH, ((TheYear - 1900) * 12) + TheMonth, -1) Or you can just write like this, but I don't really like those plus 1 MonthEnd = DATEADD(MONTH, DATEDIFF(MONTH, 0, MonthEnd) + 1, -1) */ IF @UpdateBeginDate = 1 BEGIN UPDATE @Results SET MonthStart = @FromDate WHERE MonthStart = (SELECT MIN(MonthStart) FROM @Results) END IF @UpdateEndDate = 1 BEGIN UPDATE @Results SET MonthEnd = @ToDate WHERE MonthEnd = (SELECT MAX(MonthEnd) FROM @Results) END RETURN END  Here’s the testing result\n","description":"","tags":["MSSQL","Function","MSSQL 2008","MSSQL 2017","Monthly date"],"title":"MSSQL - Get continuous sequenced start of month and end of month from a date range","uri":"/en/posts/mssql-get-continuous-sequenced-start-of-month-and-end-of-month-from-a-date-range/"},{"categories":["hugo"],"content":"Config.toml setting instruction.\nConfig.toml setting Modified date Find # Modified date\n[frontmatter] lastmod = [\"lastmod\", \":git\", \":fileModTime\", \":default\"]  Change to\n[frontmatter] date = ['date', 'publishDate', 'lastmod'] expiryDate = ['expiryDate'] lastmod = [\"lastmod\", \":fileModTime\", \":git\", \":default\"] publishDate = ['publishDate', 'date']  Original setting sequence is [“lastmod”, “:git”, “:fileModTime”, “:default”],\nHere I changed to [“lastmod”, “:fileModTime”, “:git”, “:default”].\nAuthor’s information Find # Author’s information\nChange to your information.\nSite Info Find # Site Info\nChange to your information.\nPost Share Find # Post Share\nChange the social media you want to share.\nFooter icon url changing Footer icon url changing.\nFind theme/meme/data Socials.toml\nCopy to your myblog/data\nChange to your related information.\nReference Hugo setting configuration\n","description":"","tags":["hugo","theme-meme","config.toml"],"title":"Setting config.toml","uri":"/en/posts/setting-config.toml/"},{"categories":["hugo"],"content":"Establish Hugo Site on GithubPage.\nEstablish Hugo Site Local Finding your favorite folder, start git bash.\nGenerate hugo site command\nhugo new site myblog  Change folder path\ncd myblog/  Install Hugo Theme - meme You can go to hugoranked find with more stars.\nOr go to hugo official website, check your favorite theme.\nHere I choose theme/meme.\nIf your are choosing different theme, please check their installment instruction.\nUsing git to get theme meme\ngit init git submodule add --depth 1 https://github.com/reuixiy/hugo-theme-meme.git themes/meme  Use hugo theme meme’s config.toml\nrm config.toml \u0026\u0026 cp themes/meme/config-examples/en/config.toml config.toml  Modify config.toml baseurl = “https://[your_github_username].github.io/”\nExample: https://starspiritstorm.github.io/\nGenerate simple post\u0026about\nhugo new \"posts/hello-world.md\" hugo new \"about/_index.md\"  One thing you need to take care of is, the draft setting of posts generated by hugo new are all default true.\nOpen up with notepad++, and change it to false, then it will appeared on Github Pages.\nThe posts are separated here\nmyblog\\content\\posts\nmyblog\\content\\about\nCheck Hugo site in local Turn on the site.\nhugo server -D  Typing this url on browser\nhttp://localhost:1313/  To see if you can see the posts you just generated or not.\nDeploy to Github Pages Create Github Pages’s repository first Go to your github to generate your Github Pages repository。\nThe name of Github Pages repository must be “[your_github_account].github.io”.\nGenerate hugo public folder in myblog Back to the myblog, execute\nhugo  Then you will see the public folder, change folder to public\ncd public/  The public folder is for hugo Github Pages, it’s for this repository\nhttps://github.com/[your_github_account]/[your_github_account].github.io\nInitial git in public folder, for pushing to the github You need to initialize git in public folder to push it on github.\ngit init git remote add origin https://github.com/[your_github_account]/[your_github_account].github.io  Example: git remote add origin https://github.com/starspiritstorm/starspiritstorm.github.io\ngit add . git commit -m \"Initial commit\" git push --set-upstream origin master  Setting source in github webpage After pushing the code into GitHub you still need to modify the Repository settings.\nChange the setting found in: Settings \u003e Options \u003e Github Pages \u003e Source to “master branch”\nYou can check the result after pushing it to your Github Pages (https://[your_github_account].github.io/).\nGithub Pages hugo source code Create Github Pages source code’s repository Note that all articles source code is stored in your local side. The previous pushed to your Github Pages is just your public folder.\nSo you need to open up another repository to store your source code. The steps are same with previous Github Pages repository, you can name your favorite naming for your source code repository.\nhttps://github.com/[your_github_account]/[your_github_account]_githubpages_source  Example: https://github.com/starspiritstorm/starspiritstorm_githubpages_source\nBack to myblog folder, open git bash for github_source_code After finished repository, open up git bash in myblog.\nThen generate a gitignore to exclude public folder, we don’t need it because it is result from hugo build.\necho \"public/\" \u003e\u003e .gitignore  And do the same steps to push your myblog’s source code to your new repository.\ngit init git remote add origin https://github.com/[your_github_account]/[your_github_account]_githubpages_source  Example: git remote add origin https://github.com/starspiritstorm/starspiritstorm_githubpages_source\ngit add . git commit -m \"Add hugo source code\" git push --set-upstream origin master  Automatic deployment (GitHub Action) Submodule needs a public folder Last step, use GitHub Action to do automatic deployment. When you push your source code to your source code repo, GitHub Action will generate the result to your GithubPage.\nFor the automatic deployment, you need to generate submodule public first1.\ngit submodule add -f --depth 1 https://github.com/[your_github_account]/[your_github_account].github.io.git public  Example: git submodule add -f –depth 1 https://github.com/starspiritstorm/starspiritstorm.github.io.git public\nAnd remember commit \u0026 push.\nCreate github Personal Access Token Go to here to create Personal Access Token (PAT).\nNaming no restricted, expired time I choose “No expired”, you can regenerate token if you want.\nCheck workflow\nPull down and click Generate token.\nAnd copy the token value.\nUsing the generated token value to set up your repository secret.\nSettings \u003e Secret \u003e New repository secret\nName HUGO_DEPLOY_TOKEN, and paste the copied token value.\nSetting GitHub Action workflow Go to Github Action webpage, click “set up a workflow your self”\nPaste script in the “Edit new file”, remember changing external_repository to your Github Pages repository.\nClick “start commit”, and wait.\nname: hugo CI on: push: branches: [ master ] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 with: submodules: true fetch-depth: 1 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' extended: true - name: Build run: hugo - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: #[2]: Here you need fill the secret token name, remember delete this line. personal_token: ${{ secrets.HUGO_DEPLOY_TOKEN }} #[3]: Here you need to type your Github Pages repository, remember delete this line. external_repository: starspiritstorm/starspiritstorm.github.io publish_branch: master publish_dir: ./public commit_message: ${{ github.event.head_commit.message }} # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones TZ: Asia/Taipei    [2] Difficult 2:\nI didn’t know that 「secrets.[token_name]」 needs the name of secret token.\nSo I encountered the error in Action Deploy.\nError: Action failed with “not found deploy key or tokens”\n  [3] Difficult 3:\nI was miscopied my Github Pages url “starspiritstorm/starspiritstorm.github.io.git”, the .git is not needed.\nSo I encountered another error in Action Deploy.\nremote: Repository not found.\nfatal: repository ‘https://github.com/starspiritstorm/starspiritstorm.github.io.git.git/' not found\nError: Action failed with “The process ‘/usr/bin/git’ failed with exit code 128”\n  Finally, when you see that Action page with build green check, the workflow are done!\nAutomatic deployment test After finished Github Action, you just need to new a post in your source code repository, the Github Action will do the rest work for you.\nAgain, start Git Bash in myblog folder, and hugo new post.\nCommit \u0026 push, go to your Action, you will see the sucess result.\nThen you can check the post you just made in your Github Pages.\nLast important thing is the config.toml, there are some place need to modify. Check next post.\nReference   Installment guide from author of theme meme “reuixiy”\n  「使用 GitHub Actions 部署 Hugo 博客到 GitHub Pages」\n  Reference of Github Action, cannot just copy and pastes…, I combined these two to build up my Github Action.\n  Create and host a blog with Hugo and GitHub Pages in less than 30 minutes\n如何將Hugo部落格部署到Github上?\n   Difficult 1：Github Action submodule needs public folder to work, otherwise it will fail in “Run actions/checkout@v2” Error: fatal: No url found for submodule path ‘public’ in .gitmodules.  ↩︎\n  ","description":"","tags":["hugo","theme-meme","blog","github","github pages","github action"],"title":"Establish Hugo Site on GithubPage","uri":"/en/posts/establish-hugo-site-on-githubpage/"},{"categories":["hugo"],"content":"Installing hugo.\nInstall Hugo After finished installing chocolatey, just simply open up powershell, and type\nchoco install hugo -confirm  Then install hugo extended, type\nchoco install hugo-extended -confirm  And done.\nCheck Hugo version and Uninstall Hugo Two simple command.\nCheck version\nhugo version  Uninstall hugo\nchoco uninstall hugo  ","description":"","tags":["windows","hugo"],"title":"Install Hugo in Windows","uri":"/en/posts/install-hugo-in-windows/"},{"categories":["chocolatey"],"content":"Refer to Chocolatey Official website How to uninstall\nUninstall Chocolatey Uninstall step 1. Delete Chocolatey Folder Just directly delete the Chocolatey folder, ususally it will be at C:\\ProgramData\\chocolatey\nif you are not sure where it is, you can use following command.\n$env:ChocolateyInstall  Uninstall step 2. Remove chocolately from environment After deleted the Chocolatey folder, you need to remove chocolately from environment.\nThe Official docs indicate there are four following subject need to be removed.\nChocolateyInstall\nChocolateyToolsLocation\nChocolateyLastPathUpdate\nPATH (will need updated to remove)\nBut when I doing the remove, I didn’t see the ChocolateyLastPathUpdate.\n","description":"","tags":["windows","chocolatey"],"title":"Uninstall Chocolatey in Windows","uri":"/en/posts/uninstall-chocolatey-in-windows/"},{"categories":["chocolatey"],"content":"For the purpose of installing hugo, we need to install package manager - Chocolatey for Windows.\nThis article will introduce how to install Chocolatey in Windows environment.\nInstall Chocolatey First, go to the official web site of Chocolatey\nChocolatey official site\nChocolatey official site of install instruction\nInstall step 1. Using System Administrator to open Windows Power Shell The command needs Windows Power Shell to execute, remember using System Administrator to open Windows Power Shell\n![fig2](/images/install_chocolately/fig2.start_power_shell_with_admin.png “Fig2. Right click icon and select “Run as administrator” Windows Power Shell”)\nInstall step 2. Execute the command from Chocolatey install instruction According to Chocolatey install instruction, if you have some authority control issue, you better go to the MSDN to check which authority level you required.\nTo check the setting of your Power Shell, you can using the following command.\nGet-ExecutionPolicy -list  Then you can run the “run following command”\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))  Note that command has written the “Bypass”, so your Set-ExecutionPolicy will be set to Bypass, -Scope Process means only applied for Process\nUsing “AllSigned” will get multiple queries, it depends on your needs to decide using Bypass or AllSigned, I’m just lazy person so I just using Bypass.\nAfter finished, you will see Chocolatey (choco.exe) is now ready.\n","description":"","tags":["windows","chocolatey"],"title":"Install Chocolatey in Windows","uri":"/en/posts/install-chocolatey-in-windows/"},{"categories":null,"content":"This second post was for testing GitHub Action. Pushed in source code repo, and auto deploy to the GitHub Pages repo.\n","description":"","tags":null,"title":"Post pushed to source code repo and auto published via GitHub Action","uri":"/en/posts/auto-post-with-github-action/"},{"categories":null,"content":"My first Hugo post!\n","description":"","tags":null,"title":"Hello World","uri":"/en/posts/hello-world/"}]
